@using System.ComponentModel
@using GUI.Coordinators
@using GUI.Services
@inject NavigationManager NavigationManager;
@inject StoryEditCoordinator StoryEditCoordinator;
@inject StoryService StoryService;

<MudContainer Class="d-flex flex-row justify-content-between" Style="max-width: none; width: 100%; height: 100%">
    <MudText Typo="Typo.h4" Style="width: fit-content">Story-Editor</MudText>
    <MudContainer Class="ma-0 pa-0 gap-2 d-flex flex-row" Style="max-width: none; width: fit-content">
        <MudButton Variant="@_savedBtnVariant" Color="Color.Primary" OnClick="OnSaveBtnClick">Save</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Success" OnClick="OnRunBtnClick">START</MudButton>
    </MudContainer>
</MudContainer>

@code {
    private Variant _savedBtnVariant = Variant.Outlined;

    protected override void OnInitialized()
    {
        StoryEditCoordinator.PropertyChanged += OnStoryEditCoordinatorPropertyChanged;
    }
    
    private void OnStoryEditCoordinatorPropertyChanged(object? sender, PropertyChangedEventArgs e)
    {
        if (e.PropertyName == nameof(StoryEditCoordinator.StoryChanged))
        {
            UpdateSaveButtonVariant();
        }
    }
    
    private void UpdateSaveButtonVariant()
    {
        _savedBtnVariant = StoryEditCoordinator.StoryChanged ? Variant.Filled : Variant.Outlined;
        StateHasChanged();
    }

    private async Task OnSaveBtnClick()
    {
        if (StoryEditCoordinator.CurrentStory.Id != -1)
        {
            await StoryService.UpdateStory(StoryEditCoordinator.CurrentStory);
        }
        else
        {
            var id = await StoryService.AddStory(StoryEditCoordinator.CurrentStory);
            StoryEditCoordinator.CurrentStory.Id = id;
        }

        // to update the originalStory in StoryEditCoordinator
        StoryEditCoordinator.CurrentStory = StoryEditCoordinator.CurrentStory;
        StoryEditCoordinator.ChangedCurrentStory();
    }
    
    private void OnRunBtnClick()
    {
        int storyId = 0;
        NavigationManager.NavigateTo($"/StoryTelling/{storyId}");
    }
}